//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""MenuNav"",
            ""id"": ""0dc7bfbf-f5f8-4b1d-8fe8-efcb8250c5e0"",
            ""actions"": [
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""a8242565-323a-4cb4-baac-e471ed2816f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""be3c6b4c-1422-4d39-aa98-3f59c12aef63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""b746abd6-ed04-4b2b-a1c0-f309fa2a618c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""73338288-4552-4113-bcd0-1ace2ece9de5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""7e15ff5f-5066-4b58-bc75-026749610f57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape/Back"",
                    ""type"": ""Button"",
                    ""id"": ""66b4e726-b474-4c33-bb77-601c8344f02f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e6111c01-4dac-4b06-a78c-2f23976aa4b5"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eed0a88c-abca-49d1-881f-eb6f35e89637"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ead44378-eb22-42cb-b8cc-8e6ccec91df6"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47173cd5-f406-48b0-b44d-b00f377e92e9"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad8ed01a-b328-4d02-a2e9-950a267360ff"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eee9d709-09b0-4155-9c00-a93e386bcc5f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""411e3bd6-d6b3-4970-9150-169643d1ae76"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f99a93a-b9d3-4769-9635-217d98a48a3e"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f23dd96f-d685-4c65-aa33-5bf398050144"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e52cfe02-1ca9-49c5-8386-5c1310db112c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68d414ad-eb3f-4fc6-8fea-5e4bbebd0f43"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4908bbf-89cb-48dc-8153-8b5ab45bb7b6"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28ce0a5f-ba57-4a84-abea-11cd08d96257"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48b6b9cc-9093-4009-bd55-f69019e7ca5e"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58331dc8-00f9-4531-9e56-1edbeececf39"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24176daa-4bfd-4e9d-8e0a-30cf57650f25"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape/Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f008379f-55c8-409d-b9d6-7ceee64423bd"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape/Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f21490c0-217b-4506-9939-ec3f151af8d2"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape/Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MenuNav
        m_MenuNav = asset.FindActionMap("MenuNav", throwIfNotFound: true);
        m_MenuNav_Up = m_MenuNav.FindAction("Up", throwIfNotFound: true);
        m_MenuNav_Down = m_MenuNav.FindAction("Down", throwIfNotFound: true);
        m_MenuNav_Left = m_MenuNav.FindAction("Left", throwIfNotFound: true);
        m_MenuNav_Right = m_MenuNav.FindAction("Right", throwIfNotFound: true);
        m_MenuNav_Select = m_MenuNav.FindAction("Select", throwIfNotFound: true);
        m_MenuNav_EscapeBack = m_MenuNav.FindAction("Escape/Back", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MenuNav
    private readonly InputActionMap m_MenuNav;
    private IMenuNavActions m_MenuNavActionsCallbackInterface;
    private readonly InputAction m_MenuNav_Up;
    private readonly InputAction m_MenuNav_Down;
    private readonly InputAction m_MenuNav_Left;
    private readonly InputAction m_MenuNav_Right;
    private readonly InputAction m_MenuNav_Select;
    private readonly InputAction m_MenuNav_EscapeBack;
    public struct MenuNavActions
    {
        private @PlayerControls m_Wrapper;
        public MenuNavActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Up => m_Wrapper.m_MenuNav_Up;
        public InputAction @Down => m_Wrapper.m_MenuNav_Down;
        public InputAction @Left => m_Wrapper.m_MenuNav_Left;
        public InputAction @Right => m_Wrapper.m_MenuNav_Right;
        public InputAction @Select => m_Wrapper.m_MenuNav_Select;
        public InputAction @EscapeBack => m_Wrapper.m_MenuNav_EscapeBack;
        public InputActionMap Get() { return m_Wrapper.m_MenuNav; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuNavActions set) { return set.Get(); }
        public void SetCallbacks(IMenuNavActions instance)
        {
            if (m_Wrapper.m_MenuNavActionsCallbackInterface != null)
            {
                @Up.started -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnUp;
                @Down.started -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnDown;
                @Left.started -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnLeft;
                @Right.started -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnRight;
                @Select.started -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnSelect;
                @EscapeBack.started -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnEscapeBack;
                @EscapeBack.performed -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnEscapeBack;
                @EscapeBack.canceled -= m_Wrapper.m_MenuNavActionsCallbackInterface.OnEscapeBack;
            }
            m_Wrapper.m_MenuNavActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @EscapeBack.started += instance.OnEscapeBack;
                @EscapeBack.performed += instance.OnEscapeBack;
                @EscapeBack.canceled += instance.OnEscapeBack;
            }
        }
    }
    public MenuNavActions @MenuNav => new MenuNavActions(this);
    public interface IMenuNavActions
    {
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnEscapeBack(InputAction.CallbackContext context);
    }
}
